//문제 번호: 11509 문제 이름: 풍선맞추기 
// 문제 최초 시도: 2019_04_01
// 문제 풀이 완료: 2019_04_01
// 이 코드의 접근법: 
// 일단 생각을 해보면 화살은 무조건 왼쪽에서 부터 시작해야 되고
// 이전에 해당 요소의 높이로 날라오는 화살이 없다면 그 화살을 존재하게 만들어야 한다.
// 따라서 D[i] 배열에 존재하는 화살개수를 저장하면서
// i에 해당하는 높이의 요소가 나타나면 D[i]--, D[i-1]++ 해주고 S++해준다.
// D[i]= 높이 i에 존재하는 화살의 개수
// S= 최소 화살 개수

#include <iostream>
using namespace std;
int N,S;
int H[1100000];
int D[1100000];
int main()
{
    cin>>N;
    for(int x=0; x<N; x++)
    {
        cin>>H[x];
    }
    for(int x=0; x<N; x++)
    {
        if(D[H[x]]>0)
        {
            D[H[x]]--;
            if(H[x]-1>0) D[H[x]-1]++;
        }
        else
        {
            S++;
            if(H[x]-1>0) D[H[x]-1]++;
        }
    }
    cout<<S;
}